{"changed":false,"filter":false,"title":"MarioController.php","tooltip":"/laravel/app/Http/Controllers/Mario/MarioController.php","value":"<?php\n\n\nnamespace App\\Http\\Controllers\\Mario;\n\nuse App\\Http\\Controllers;\nuse App\\Http\\Controllers\\getID3;\n\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Session;\nuse App\\Content;\nuse App\\Usermario;\nuse App\\Admin;\nuse App\\Account;\nuse App\\Usermedia;\nuse App\\Soundfile;\nuse App\\Short_moving;\nuse Illuminate\\Support\\Facades\\Redirect;\nuse App\\User;\nuse App\\Movement;\nuse Input;\nuse DB;\nuse ZipArchive;\nuse PharData;\nuse File;\nuse Mail;\nuse App\\Message;\n\n\ninclude(public_path().'/lib/getid3/getid3.php');\n\n\n\nclass MarioController extends Controller{\npublic function index(){ ////메인 페이지 화면\n\n    \n   $noticeMessage =  Message::where('addressee',Session::get('user_id'))->where('check_it',1)->get();\n   if($noticeMessage){\n     $count = 0;\n     foreach($noticeMessage as $value){\n       $count++;\n     }\n     $content = Content::where('cont_check',1)->get(); /// 등록된 컨텐츠 모두뛰움\n      return view('marionett.index')->with('content',$content)\n      ->with('noticeMessage',$noticeMessage)->with('count',$count);\n}\n    $content = Content::where('cont_check',1)->get(); /// 등록된 컨텐츠 모두뛰움\n    return view('marionett.index')->with('content',$content)->with('count',0);\n}\n\npublic function short_moving(Request $request){\n    $category = $request->input('category');\n    $short_moving = Short_moving::where('cont_category',$category)->get();\n    return view(\"marionett.shortProduct\")->with('content',$short_moving);\n}\n\n\npublic function product(Request $request){ ///상품리스트 뛰움 \n        if($request->has('category')){\n        $category = $request->input('category','fairytale');\n        $content = Content::where('cont_category',$category)->where('cont_check',1)->get();\n        ////카테고리별, 등록된리스트 모두뛰움\n        return view(\"marionett.product\")->with('content',$content);\n    }\n\n        if($request->has('price')){\n            $price = $request->input('price');\n            if($price == 'high')\n            $content = Content::where('cont_check',1)->orderBy('cont_price','desc')->get();\n            if($price == 'low')\n            $content = Content::where('cont_check',1)->orderBy('cont_price')->get();\n            return view(\"marionett.product\")->with('content',$content);\n        }\n    \n        if($request->has('sell')){\n        $sell = $request->input('sell');\n            if($sell == 'now')\n            $content = Content::where('cont_check',1)->orderBy('cont_sell','desc')->get();\n            if($sell == 'forYear'){\n            $content = DB::table('contents')\n            ->where('cont_check',1)\n            ->whereRaw(DB::raw('created_at BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW()'))\n            ->orderBy('cont_sell','desc')->get();\n            }\n            if($sell == 'forMonth'){\n            $content = DB::table('contents')\n            ->where('cont_check',1)\n            ->whereRaw(DB::raw('created_at BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW()'))\n            ->orderBy('cont_sell','desc')->get();\n            }\n            if($sell == 'forWeek'){\n            $content = DB::table('contents')\n            ->where('cont_check',1)\n            ->whereRaw(DB::raw('created_at BETWEEN DATE_SUB(NOW(), INTERVAL 1 WEEK) AND NOW()'))\n            ->orderBy('cont_sell','desc')->get();\n            }\n        return view(\"marionett.product\")->with('content',$content);\n    }\n    \n        if($request->has('age')){\n            $age = $request->input('age');\n            if($age == 'a0_2'){\n                $content = DB::table('contents')\n                ->where('cont_check',1)\n                ->whereRaw(DB::raw('age BETWEEN 0 AND 2'))\n                ->get();\n            }\n            if($age == 'a3_5'){\n                $content = DB::table('contents')\n                ->where('cont_check',1)\n                ->whereRaw(DB::raw('age BETWEEN 3 AND 5'))\n                ->get();\n                \n            }\n            if($age == 'a6_8'){\n                $content = DB::table('contents')\n                ->where('cont_check',1)\n                ->whereRaw(DB::raw('age BETWEEN 6 AND 8'))\n                ->get();\n                \n            }\n            if($age == 'all'){\n                $content = Content::where('cont_check',1)->get();\n            }\n            return view(\"marionett.product\")->with('content',$content);\n        }\n        if($request->has('date')){\n            $date = $request->input('date');\n            if($date == 'new'){\n                $content = DB::table('contents')\n                ->where('cont_check',1)\n                ->orderBy('created_at','desc')->get();\n            }\n            if($date == 'old'){\n                $content = DB::table('contents')\n                ->where('cont_check',1)\n                ->orderBy('created_at')->get();\n            }\n            return view(\"marionett.product\")->with('content',$content);\n        }\n        if($request->has('user')){\n            $user = $request->input('user');\n            if($user == 'admin'){\n            $content = DB::table('contents')\n            ->where('cont_check',1)\n            ->where('user_id',$user)->get();\n            return view(\"marionett.product\")->with('content',$content);\n            }\n        }\n}\n\n// \n\npublic function productDetail(Request $request){ //// 상품 상세 페이지\n    $name = $request->input('name');\n    Message::where('cont_name',$name)->update(['check_it'=>0]); \n    $name = $request->input('name','puppy');\n    $content = Content::where('cont_name',$name)->get();\n    return view(\"marionett.productDetail\")->with('content',$content[0]);\n}\n\npublic function shortProductDetail(Request $request){\n    $name = $request->input('name');\n    $short_moving = Short_moving::where('cont_name',$name)->get();\n    return view(\"marionett.shortProductDetail\")->with('content',$short_moving[0]);\n}\n\n\n\npublic function preview(Request $request){ ////상품 미리보기 (영상)\n    $name = $request->input('name');\n    $content = Content::Where('cont_name',$name)->get();\n    return view('marionett.preview')->with('content',$content);\n}\n\npublic function createMario(){ //// 마리오네트 동작등록 페이지\n    return view(\"marionett.createMario\");\n}\n\n\npublic function createMarioAction(Request $request){ ////// 마리오네트 컨텐츠 등록\n    \n    if($request->hasFile('cont_image')){ /// 이미지  파일 있는지 검사\n        $img_file = $request->file('cont_image');\n        $img_name = $img_file->getClientOriginalName();\n        $img_file->move(public_path('img'), $img_name);\n        $cont_image_path = public_path('img').$img_name;\n    }\n    \n    if($request->hasFile('cont_video')){  /// 비디오파일 있는지 검사\n        $video_file = $request->file('cont_video');\n        $video_name = $video_file->getClientOriginalName();\n        $video_file->move(public_path('video'), $video_name);\n        $cont_image_path = public_path('video').$video_name;\n    }\n    $cont_category = $request->input('cont_category');\n    $cont_name = $request->input('cont_name');\n    $cont_effect_sound = $request->input('cont_effect_sound');\n    $cont_background_sound = $request->input('cont_background_sound');\n    $cont_voice = $request->input(\"cont_voice\");\n    $cont_moving = $request->input(\"cont_moving\");\n    $cont_video = \"/video\".'/'.$video_name;\n    $cont_image = \"/img\".'/'.$img_name;\n    $cont_detail = $request->input(\"cont_detail\");\n    $content = new Usermario;\n    $content->cont_category = $cont_category;\n    $content->user_id = Session::get('user_id');\n    $content->cont_name = $cont_name;\n    $content->cont_effect_sound = $cont_effect_sound;\n    $content->cont_background_sound = $cont_background_sound;\n    $content->cont_voice = $cont_voice;\n    $content->cont_moving = $cont_moving;\n    $content->cont_video = $cont_video;\n    $content->cont_image = $cont_image;\n    $content->cont_detail = $cont_detail;\n    $content->cont_info = 'mycreate';\n    $content->save();\n    return Redirect('/myMarionetteStory?info=mycreate');\n}\n\npublic function purchase(Request $request){   /// 상품 구매\n\n    $name = $request->input('name','puppy');  //상품이름 조회\n    $content = Content::Where('cont_name',$name)->get();\n    foreach ($content as $value) {\n        $cont_name = $value->cont_name;\n        $cont_category = $value->cont_category;\n        $cont_price = $value->cont_price;\n        $cont_detail = $value->cont_detail;\n        $cont_image = $value->cont_image;\n        $cont_check = $value->cont_check;\n        $cont_sell = $value->cont_sell;\n        $cont_video = $value->cont_video;\n        $moving = $value->moving;\n        $sound = $value->sound;\n        $backsound = $value->backsound;\n        $tarpath  = $value->tarpath;\n        $block_array = $value->block_array;\n   }\n    $user_id = Session::get('user_id'); \n    $user = Usermario::where('user_id',$user_id)->get();\n    foreach($user as $value){\n        if($value->cont_name == $cont_name)\n        return Redirect('/');\n    }\n\n    Content::where('cont_name',$name)->update(['cont_sell'=>$cont_sell+1]); /// 판매량 1증가\n    $usermario = new Usermario;\n    $usermario->user_id = $user_id;\n    $usermario->cont_category = $cont_category;\n    $usermario->cont_name = $name;\n    $usermario->cont_detail =$cont_detail;\n    $usermario->cont_price = $cont_price;\n    $usermario->cont_image = $cont_image;\n    $usermario->cont_info = 'purchase';\n    $usermario->cont_video = $cont_video;\n    $usermario->moving = $moving;\n    $usermario->sound = $sound;\n    $usermario->backsound = $backsound;\n    $usermario->tarpath = $tarpath;\n    $usermario->block_array = $block_array;\n    $usermario->save();\n    /////////////usemarios 로 구매한 상품 이동\n    return Redirect('/myMarionetteStory?info=purchase'); //// 구매한 페이지로 이동\n}\n  \n  \npublic function shortMovingPurchase(Request $request){   /// 상품 구매\n\n    $name = $request->input('name');  //상품이름 조회\n    $content = Short_moving::Where('cont_name',$name)->get();\n    foreach ($content as $value) {\n        $cont_name = $value->cont_name;\n        $cont_category = $value->cont_category;\n        $cont_price = $value->cont_price;\n        $cont_image = $value->cont_image;\n        $cont_sell = $value->cont_cell;\n   }\n    $user_id = Session::get('user_id'); \n    $user = Usermario::where('user_id',$user_id)->get();\n    foreach($user as $value){\n        if($value->cont_name == $cont_name)\n        return Redirect('/');\n    }\n\n    Short_moving::where('cont_name',$name)->update(['cont_sell'=>$cont_sell+1]); /// 판매량 1증가\n    $usermario = new Usermario;\n    $usermario->user_id = $user_id;\n    $usermario->cont_category = $cont_category;\n    $usermario->cont_name = $name;\n    $usermario->cont_detail ='abcd';\n    $usermario->cont_image = $cont_image;\n    $usermario->cont_info = 'shortMoving';\n    $usermario->tarpath = public_path().'/user/'.$user_id.'/madeContents/test.tar';\n    $usermario->save();\n    /////////////usemarios 로 구매한 상품 이동\n    return Redirect('/myMarionetteStory?info=shortMoving'); //// 구매한 페이지로 이동\n}  \n  \n  \n  \npublic function Messagetest(){\n\n  $user = array( \n      'email'=>'howdygom@gmail.com',\n      'name'=>'Ha, Seung-Min'\n      );\n      \n      \n  $data = array(\n      'detail'=>'새로운 상품이 등록되었습니다123123123',\n      'name' => 'https://marionette-cloned-marionette.c9users.io'\n      );\n      \n    Mail::send('marionett.mailtest', $data, function ($message) use ($user) {\n    $message->to($user['email'],$user['name'])->subject('Welcome!');\n});\n\n}  \n  \npublic function intro(){\n    return view(\"marionett.intro\");\n}\n    ///////////////////////////////////////////////////////////////////////////////////동작정의 \npublic function define(){\n  return view('marionett.define');\n}\n\npublic function moveDataTransfer_update(Request $request){\n    \n    \n     $user_id = Session::get('user_id');\n    var_dump($request->input('data'));\n    $json_data = json_decode($request->input('data'));\n    $moving1 = json_encode($json_data->move);\n    $sound = json_encode($json_data->sound);\n    $CompressionPath = public_path().'/beforeCompression/';\n    $CompressionPath_explanation = public_path().'/explanation/';\n    File::makeDirectory($CompressionPath,$mode=0775, $recursive = true, $force =false);\n    File::makeDirectory($CompressionPath_explanation,$mode=0775, $recursive = true, $force =false);\n    $snd= $json_data->sound;\n    $bgm = $json_data->bgm;\n    \n    \n    foreach($bgm as $value1){\n        \n        $rest = substr($value1,0,3);\n        $bgm_file = substr($value1,3,100);\n        \n        $header_check1 = substr($bgm_file,0,2);\n        if($header_check1 == 'BB')\n            {\n            File::copy( public_path().'/sounds/back_sound/'.$bgm_file, public_path().'/beforeCompression/'.$bgm_file);\n            echo \"기본 배경음 :\".$bgm_file .'</br>';\n            }\n        if($header_check1 == 'UB')\n            {\n            File::copy( public_path().'/user/'.$user_id.'/backSound/'.$bgm_file, public_path().'/beforeCompression/'.$bgm_file);  \n            echo \"유저 배경음 :\".$bgm_file .'</br>';\n            }\n    }\n    foreach($snd as $value){\n        \n        $rest1 = substr($value,0,3);\n        $sound_file = substr($value,3,100);\n        \n        $header_check= $value;\n        $header_check = substr($sound_file,0,2);\n        if($header_check == 'BE')\n           {\n            File::copy( public_path().'/sounds/effect_sound/'.$sound_file, public_path().'/beforeCompression/'.$sound_file);  \n            echo \"기본 효과음 :\".$sound_file .'</br>';\n        }\n        if($header_check == 'UE')\n           {\n            File::copy( public_path().'/user/'.$user_id.'/effectFile/'.$sound_file, public_path().'/beforeCompression/'.$sound_file);  \n            echo \"유저 효과음 :\".$sound_file .'</br>';\n           }\n        if($header_check == 'UV')\n           {\n            File::copy( public_path().'/user/'.$user_id.'/voiceRecode/'.$sound_file, public_path().'/beforeCompression/'.$sound_file);  \n            echo \"유저 녹음 :\".$sound_file .'</br>';\n           }\n    }\n        \n        $cont_name = $request->input('name');\n        \n        $cont_data = Usermario::where('cont_name',$cont_name)->get();\n        $cont_category = $cont_data[0]->cont_category;        \n        $cont_name = $cont_data[0]->cont_name;\n        $cont_detail = $cont_data[0]->cont_detail;\n        $cont_image  = $cont_data[0]->cont_image;\n        $cont_video  = $cont_data[0]->cont_video;\n        \n    \n    \n    \n    $content = $request->input(); //view단에서 받은 JSON데이터\n    \n    $basePath = public_path().'/user/'.$user_id.'/madeContents/';\n    $block_array = $request->input('block_array');\n    Usermario::where('cont_name',$cont_name)->update(['moving'=>$moving1]);\n    Usermario::where('cont_name',$cont_name)->update(['sound'=>$sound]);\n    Usermario::where('cont_name',$cont_name)->update(['backsound'=>$bgm_file]);\n    Usermario::where('cont_name',$cont_name)->update(['block_array'=>$block_array]);\n    Usermario::where('cont_name',$cont_name)->update(['tarpath'=>$basePath.$cont_name.'.explanation']);\n\n    $moving = DB::select('select * from usermarios where cont_name =?',[$cont_name]);  // DB조회\n\n    foreach ($moving as $value) {\n        $cont_name = $value->cont_name;\n        $moving = $value->moving;\n        $sound = $value->sound;\n        $backsound = $value->backsound;\n        $tarpath = $value->tarpath;\n    }\n    try {\n        $baseDir = public_path().'/beforeCompression/';\n        $file = fopen($baseDir.$cont_name.'_s.txt',\"w\");\n        fwrite($file,$cont_name.\"\\n\");\n        fwrite($file,$moving.\"\\n\");\n        fwrite($file,$sound.\"\\n\");\n        fwrite($file,\"000\".$backsound.\"\\n\");\n        fwrite($file,'scenario2');\n        fclose($file);\n        echo \"txt파일 성공!<br />\";\n    }\n    catch(Exception $e) \n    {  \n       echo \"에러\"; \n    }\n    try {\n           if (File::exists($tarpath)) {\n                File::delete($tarpath); ///기존 tar파일 지움\n            }\n        $basePath = public_path().'/user/'.$user_id.'/madeContents/'; //user개인 폴더로 이동\n        $p = new PharData($basePath.$cont_name.'.scenario'); /////파일 tar로 묶음\n        $p->buildFromDirectory(public_path().'/beforeCompression/'); //폴더에 있는것 파일로 다묶음\n        echo \"tar파일 성공!\";\n        File::deleteDirectory(public_path().'/beforeCompression/'); //폴더 지워서 비움 \n    }catch(Exception $e) {echo \"에러\";}\n    \n    \n    \n    $copypath = public_path('user/'.$user_id.'/madeContents/'.$cont_name.'.scenario');\n    File::copy($copypath, public_path().'/explanation/'.$cont_name.'.scenario'); \n\n    try {\n        $baseDir = public_path().'/explanation/';\n        $file = fopen($baseDir.$cont_name.'.txt',\"w\");\n        fwrite($file,$cont_name.\"\\n\");\n        fwrite($file,$cont_detail.\"\\n\");\n        fwrite($file,$user_id.\"\\n\");\n        fwrite($file,$cont_image);\n        fclose($file);\n        echo \"txt설명 파일 성공!<br />\";\n    }catch(Exception $e) {echo\"설명파일 에러\";}\n    \n    try{\n        $basePath = public_path().'/user/'.$user_id.'/madeContents/'; //user개인 폴더로 이동\n        $p = new PharData($basePath.$cont_name.'.explanation'); /////파일 tar로 묶음\n        $p->buildFromDirectory(public_path().'/explanation/'); //폴더에 있는것 파일로 다묶음\n        File::deleteDirectory(public_path().'/explanation/'); //폴더 지워서 비움\n        File::delete($basePath.$cont_name.'.scenario'); ///기존 tar파일 지움\n        echo \"최종압축 성공\";\n        Session::forget('cont_name');\n    }\n    catch(Exception $e){echo\"최종압축 에러\";}\n    \n}\n\n\n    \n/////////////////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////동작 저장 \npublic function moveDataTransfer(Request $request){ //동작데이터 DB에 정의 \n    \n    \n    $user_id = Session::get('user_id');\n    var_dump($request->input('data'));\n    $json_data = json_decode($request->input('data'));\n    $moving1 = json_encode($json_data->move);\n    $sound = json_encode($json_data->sound);\n    $CompressionPath = public_path().'/beforeCompression/';\n    $CompressionPath_explanation = public_path().'/explanation/';\n    File::makeDirectory($CompressionPath,$mode=0775, $recursive = true, $force =false);\n    File::makeDirectory($CompressionPath_explanation,$mode=0775, $recursive = true, $force =false);\n    $snd= $json_data->sound;\n    $bgm = $json_data->bgm;\n    \n    \n    foreach($bgm as $value1){\n        \n        $rest = substr($value1,0,3);\n        $bgm_file = substr($value1,3,100);\n        \n        $header_check1 = substr($bgm_file,0,2);\n        if($header_check1 == 'BB')\n            {\n            File::copy( public_path().'/sounds/back_sound/'.$bgm_file, public_path().'/beforeCompression/'.$bgm_file);\n            echo \"기본 배경음 :\".$bgm_file .'</br>';\n            }\n        if($header_check1 == 'UB')\n            {\n            File::copy( public_path().'/user/'.$user_id.'/backSound/'.$bgm_file, public_path().'/beforeCompression/'.$bgm_file);  \n            echo \"유저 배경음 :\".$bgm_file .'</br>';\n            }\n    }\n    foreach($snd as $value){\n        \n        $rest1 = substr($value,0,3);\n        $sound_file = substr($value,3,100);\n        \n        $header_check= $value;\n        $header_check = substr($sound_file,0,2);\n        if($header_check == 'BE')\n           {\n            File::copy( public_path().'/sounds/effect_sound/'.$sound_file, public_path().'/beforeCompression/'.$sound_file);  \n            echo \"기본 효과음 :\".$sound_file .'</br>';\n        }\n        if($header_check == 'UE')\n           {\n            File::copy( public_path().'/user/'.$user_id.'/effectFile/'.$sound_file, public_path().'/beforeCompression/'.$sound_file);  \n            echo \"유저 효과음 :\".$sound_file .'</br>';\n           }\n        if($header_check == 'UV')\n           {\n            File::copy( public_path().'/user/'.$user_id.'/voiceRecode/'.$sound_file, public_path().'/beforeCompression/'.$sound_file);  \n            echo \"유저 녹음 :\".$sound_file .'</br>';\n           }\n    }\n    \n    $cont_category = Session::get('cont_category'); \n    $cont_name = Session::get('cont_name');\n    $cont_detail = Session::get('cont_detail');\n    $cont_image = Session::get('cont_image');\n    $cont_video = Session::get('cont_video');\n  \n    \n    $content = $request->input(); //view단에서 받은 JSON데이터\n        \n        \n      $users = User::where('category_info',$cont_category)->get();\n         foreach($users as $value){\n        $user_id = $value->user_id;\n     }\n        $message = new Message();\n        $message->addressee = $user_id;\n        $message->content = \"새로운 상품이 등록 되었습니다\";\n        $message->cont_name = $cont_name;\n        $message->check_it = 1;\n        $message->save();\n     \n    $user_info = User::where('category_info',$cont_category)->get();\n    foreach($user_info as $value){\n              $user = array( \n                  'email'=>$value->mail_address,\n                  'name'=>$value->user_name\n                  );\n              $data = array(\n                  'detail'=>'새로운 관심상품이 등록되었습니다',\n                  'name' => 'https://marionette-cloned-marionette.c9users.io/productDetail?name='.$cont_name\n                  );\n                Mail::send('marionett.mailtest', $data, function ($message) use ($user) {\n                $message->from('howdy0711@naver.com', 'DANCING MARIONETTE');\n                $message->to($user['email'],$user['name'])->subject('관심상품이 등록 되었습니다.');\n            });\n    }\n\n\n\n\n\n\n\n    \n    $block_array = $request->input('block_array');\n    // dd($block_array);\n    \n    \n    if(Session::get('user_id') == 'admin'){\n    $contdata = new Content();\n    $contdata->cont_price = 10000;\n    $contdata->cont_category = $cont_category;\n    $contdata->cont_name = $cont_name;\n    $contdata->cont_video = $cont_video;\n    $contdata->cont_image = $cont_image;\n    $contdata->cont_detail = $cont_detail;\n    $contdata->cont_check = 1;\n    $contdata->user_id = Session::get('user_id');\n    $contdata->moving =$moving1;\n    $contdata->sound = $sound;\n    $contdata->backsound = $bgm_file;\n    $basePath = public_path().'/user/'.$user_id.'/madeContents/';\n    $contdata->tarpath =$basePath.$cont_name.'.explanation';\n    $contdata->block_array = $block_array;\n    $contdata->save();\n    $moving = DB::select('select * from contents where cont_name =?',[$cont_name]);  // DB조회\n    echo \"admin\".\"<br>\";\n    }\n    \n    \n    \n    else{\n    $contdata = new Usermario();\n    $contdata->cont_price = 10000;\n    $contdata->cont_category = $cont_category;\n    $contdata->cont_name = $cont_name;\n    $contdata->cont_video = $cont_video;\n    $contdata->cont_image = $cont_image;\n    $contdata->cont_detail = $cont_detail;\n    $contdata->user_id = Session::get('user_id');\n    $contdata->moving =$moving1;\n    $contdata->sound = $sound;\n    $contdata->backsound = $bgm_file;\n    $basePath = public_path().'/user/'.$user_id.'/madeContents/';\n    $contdata->tarpath =$basePath.$cont_name.'.explanation';\n    $contdata->cont_info = 'mycreate';\n    $contdata->block_array = $block_array;\n    $contdata->save();\n    $moving = DB::select('select * from usermarios where cont_name =?',[$cont_name]);  // DB조회\n    echo \"user\".\"<br>\";\n    }\n    \n    \n    foreach ($moving as $value) {\n        $cont_name = $value->cont_name;\n        $moving = $value->moving;\n        $sound = $value->sound;\n        $backsound = $value->backsound;\n    }\n    try {\n        $baseDir = public_path().'/beforeCompression/';\n        $file = fopen($baseDir.$cont_name.'_s.txt',\"w\" );\n        \n        fwrite($file,$cont_name.\"\\n\");\n        fwrite($file,$moving.\"\\n\");\n        fwrite($file,$sound.\"\\n\");\n        fwrite($file,\"000\".$backsound.\"\\n\");\n        fwrite($file,'scenario2');\n        fclose($file);\n        echo \"txt파일 성공!<br />\";\n    }catch(Exception $e){echo \"에러\"; }\n    \n    try {\n        $basePath = public_path().'/user/'.$user_id.'/madeContents/'; //user개인 폴더로 이동\n        $p = new PharData($basePath.$cont_name.'.scenario'); /////파일 tar로 묶음\n        $p->buildFromDirectory(public_path().'/beforeCompression/'); //폴더에 있는것 파일로 다묶음\n        echo \"tar파일 성공!\";\n        File::deleteDirectory(public_path().'/beforeCompression/'); //폴더 지워서 비움 \n    }catch(Exception $e) {echo \"에러\";}\n    \n    \n    $copypath = public_path('user/'.$user_id.'/madeContents/'.$cont_name.'.scenario');\n    File::copy($copypath, public_path().'/explanation/'.$cont_name.'.scenario'); \n\n    try {\n        $baseDir = public_path().'/explanation/';\n        $file = fopen($baseDir.$cont_name.'.txt',\"w\");\n        fwrite($file,$cont_name.\"\\n\");\n        fwrite($file,$cont_detail.\"\\n\");\n        fwrite($file,$user_id.\"\\n\");\n        fwrite($file,$cont_image);\n        fclose($file);\n        echo \"txt설명 파일 성공!<br />\";\n    }catch(Exception $e) {echo\"설명파일 에러\";}\n    \n    try{\n        $basePath = public_path().'/user/'.$user_id.'/madeContents/'; //user개인 폴더로 이동\n        $p = new PharData($basePath.$cont_name.'.explanation'); /////파일 tar로 묶음\n        $p->buildFromDirectory(public_path().'/explanation/'); //폴더에 있는것 파일로 다묶음\n        File::deleteDirectory(public_path().'/explanation/'); //폴더 지워서 비움\n        File::delete($basePath.$cont_name.'.scenario'); ///기존 tar파일 지움\n        echo \"최종압축 성공\";\n        Session::forget('cont_name');\n    }\n    catch(Exception $e){echo\"최종압축 에러\";}\n    \n}\n\n\n\n\n\n////////////////////////////////////////////////////////////////////////////////////////녹음\n    public function saveRecoding(Request $request){\n      \n      $user_id = Session::get('user_id');\n      $file = $request->all();\n      $filename = $file['name'];\n      $korean_name = $file['koreanName'];\n      $file['data']->move(public_path().'/user/'.$user_id.'/voiceRecode/',$filename.\".webm\");\n      $filepath = public_path().'/user/'.$user_id.'/voiceRecode/'.$filename.'.wav';\n      \n      chdir(\"user/\".$user_id.\"/voiceRecode\");\n      echo system(\"ffmpeg -i \".$filename.\".webm\". \" -acodec pcm_s16le -ac 2 \" .$filename.\".wav\");\n      \n      $getID3 =  new \\getID3;\n      $ThisFileInfo = $getID3->analyze($filepath); \n      $voice_time_of_sound =  round($ThisFileInfo['playtime_seconds']); //사운드 시간정보\n      $usermedia = new Usermedia;\n      $usermedia->user_id = $user_id;\n      $usermedia->file_of_kind = 'voice_file';\n      $usermedia->file_name = $filename.'.wav';\n      $usermedia->file_path = $filepath;\n      $usermedia->time_of_soundfile = $voice_time_of_sound;\n      $usermedia->koreanName = $korean_name;\n      $usermedia->save();\n      \n      }\n\n////////////////////////////////////////////////////////////////////////////////////////동작등록  \n  public function makingTool(){\n    $user_id = Session::get('user_id');\n    \n  //////////////////////////////////사용자 사운드이름   \n  $UB_sound = Usermedia::Where('user_id',$user_id)->where('file_of_kind','back_file')->get();\n  $UE_sound = Usermedia::Where('user_id',$user_id)->where('file_of_kind','effect_file')->get();\n  $UV_sound = Usermedia::Where('user_id',$user_id)->where('file_of_kind','voice_file')->get();\n  /////////////////////////////////기본사운드 이름 \n  $BE_sonud = Soundfile::Where('file_of_kind','effect_file')->get();\n  $BB_sound = Soundfile::Where('file_of_kind','back_file')->get();\n  \n//   return view('marionett.makingTool_test')->with('UB_sound',$UB_sound)->with('UE_sound',$UE_sound)\n//   ->with('UV_sound',$UV_sound)->with('BE_sound',$BE_sonud)->with('BB_sound',$BB_sound);\n  \n  return view('makingTool.hontounomain')->with('UB_sound',$UB_sound)->with('UE_sound',$UE_sound)\n  ->with('UV_sound',$UV_sound)->with('BE_sound',$BE_sonud)->with('BB_sound',$BB_sound);\n  }\n  \n  \n  public function UploadBackSound (Request $request){\n    $user_id = Session::get('user_id');\n    $back_file = $request->file;\n    $cont_name = $request->input('name');\n    $Bopen_or_close = $request->input('Bopen_or_close');\n    $back_file_name = $request->input('fileName');\n    $back_file->move(public_path('user/'.$user_id.'/backSound/'),$back_file_name); \n    $back_file_path = public_path('user/'.$user_id.'/backSound/').$back_file_name;\n    $getID3 =  new \\getID3;\n    $ThisFileInfo = $getID3->analyze($back_file_path); \n    $back_time_of_sound =  round($ThisFileInfo['playtime_seconds']); //사운드 시간정보\n    $file_of_kind = 'back_file';\n    $files = new Usermedia;\n    $files->user_id = $user_id;\n    $files->koreanName = $cont_name;\n    $files->shareState = $Bopen_or_close;\n    $files->file_of_kind = $file_of_kind;\n    $files->file_name = $back_file_name;\n    $files->file_path = $back_file_path;\n    $files->time_of_soundfile = $back_time_of_sound;\n    $files->save();\n    return $back_time_of_sound;\n  }\n  \n\n  public function UploadEffect(Request $request){\n    $user_id = Session::get('user_id');\n    $cont_name = $request->input('name');\n    $effect_file = $request->file;\n    $effect_file_name = $request->input('fileName');\n    $effect_file->move(public_path('user/'.$user_id.'/effectFile/'), $effect_file_name); \n    $effect_file_path = public_path('user/'.$user_id.'/effectFile/').$effect_file_name;\n    $getID3 =  new \\getID3;\n    $ThisFileInfo = $getID3->analyze($effect_file_path); \n    $effect_time_of_sound =  round($ThisFileInfo['playtime_seconds']); //사운드 시간정보\n    \n    $file_of_kind = 'effect_file';\n    $files = new Usermedia;\n    $files->user_id = $user_id;\n    $files->koreanName = $cont_name;\n    $files->file_of_kind = $file_of_kind;\n    $files->file_name = $effect_file_name;\n    $files->file_path = $effect_file_path;\n    $files->time_of_soundfile = $effect_time_of_sound;\n    $files->save();\n  }\n  \n  public function soundfileTest(){\n    $pathName = \"/home/ubuntu/workspace/laravel/public/user/admin/voiceRecode/UV_sound28.wav\";\n    $getID3 =  new \\getID3;\n    $ThisFileInfo = $getID3->analyze($pathName);\n    dd($ThisFileInfo);\n    echo $ThisFileInfo['playtime_string'];\n  }\n  \n  \n  public function searchProduct(Request $request){\n      $data = $request->input('query');\n      $content = Content::where('cont_name','like','%' .$data. '%')\n      ->where('cont_check',1)\n      ->orWhere('cont_detail','like','%' .$data. '%')\n      ->where('cont_check',1)\n      ->get();\n    return view('marionett.index')->with('content',$content);\n  }\n  \n   \n  public function searchPerPrice(Request $request){\n      $startPrice = $request->input('startPrice');\n      $endPrice = $request->input('endPrice');\n        $content = DB::table('contents')\n        ->where('cont_check',1)\n        ->whereBetween('cont_price',[$startPrice,$endPrice])->get();\n\n    return view('marionett.index')->with('content',$content);\n  }\n  \n  public function searchPerAge(Request $request){\n            $startAge = $request->input('startAge');\n            $endAge = $request->input('endAge');\n            $content = DB::table('contents')\n                         ->where('cont_check',1)\n                         ->whereBetween('age',[$startAge,$endAge])->get();\n             return view('marionett.index')->with('content',$content);        \n            \n  }\n  \n  \n    public function searchDetail(Request $request){\n        \n    \n            $startAge = 0;\n            $endAge = 100;\n            $startPrice = 0;\n            $endPrice = 1000000;\n            \n        \n            if($request->has('category'))\n            $category = $request->input('category');\n            if($request->has('startAge'))\n            $startAge = $request->input('startAge');\n            if($request->has('endAge'))\n            $endAge = $request->input('endAge');\n            if($request->has('startPrice'))\n            $startPrice = $request->input('startPrice');\n            if($request->has('endPrice'))\n            $endPrice = $request->input('endPrice');\n            if($request->has('keyword'))\n            $keyword = $request->input('keyword');\n            \n            \n            if($request->has('category') && ($request->has('keyword'))){\n            $content = DB::table('contents')\n                         ->where('cont_check',1)\n                         ->where('cont_category',$category)\n                         ->whereBetween('cont_price',[$startPrice,$endPrice])\n                         ->whereBetween('age',[$startAge,$endAge])\n                         ->where('cont_detail','like','%' .$keyword. '%')\n                         ->get();\n            return view('marionett.index')->with('content',$content);        \n            }\n            \n            if($request->has('category')){\n            $content = DB::table('contents')\n                         ->where('cont_check',1)\n                         ->where('cont_category',$category)\n                         ->whereBetween('cont_price',[$startPrice,$endPrice])\n                         ->whereBetween('age',[$startAge,$endAge])\n                         ->get();\n            return view('marionett.index')->with('content',$content);        \n            }\n            \n            if($request->has('keyword')){\n            $content = DB::table('contents')                       \n                         ->where('cont_check',1)\n                         ->whereBetween('cont_price',[$startPrice,$endPrice])\n                         ->whereBetween('age',[$startAge,$endAge])\n                         ->where('cont_detail','like','%' .$keyword. '%')\n                         ->get();\n            return view('marionett.index')->with('content',$content);        \n\n            }\n            \n            \n            $content = DB::table('contents')\n                         ->where('cont_check',1)\n                         ->whereBetween('cont_price',[$startPrice,$endPrice])\n                         ->whereBetween('age',[$startAge,$endAge])\n                         ->get();\n             return view('marionett.index')->with('content',$content);        \n            \n  }\n  \n  \n  \n  \n  public function searchEffectDetail(Request $request){\n      \n     $category = $request->input('category');\n     $minTime = $request->input('minTime');\n     $maxTime = $request->input('maxTime');\n     $keyword = $request->input('keyword');\n     \n     echo  $category . \"<br>\".\n            $minTime .\"<br>\".\n            $maxTime .\"<br>\".\n            $keyword ;\n            \n            \n          $usermedia = DB::table('usermedia')\n                         ->where('shareState',1)\n                         ->where('category',$category)\n                         ->whereBetween('time_of_soundfile',[$minTime,$maxTime])\n                         ->where('koreanName','like','%' .$keyword. '%')\n                         ->get();\n    \n    \n     \n  }\n  \n  \n  public function save_temporary(Request $request){\n      $cont_name = $request->input('contentTitle');\n      $cont_detail = $request->input('contentExplain');\n      $cont_category = $request->input('contentCategory');\n\n    if($request->hasFile('i_file')){ /// 이미지  파일 있는지 검사\n        $img_file = $request->file('i_file');\n        $img_name = $img_file->getClientOriginalName();\n        $img_file->move(public_path('img'), $img_name);\n        $cont_image_path = public_path('img').$img_name;\n    }\n    \n    if($request->hasFile('v_file')){  /// 비디오파일 있는지 검사\n        $video_file = $request->file('v_file');\n        $video_name = $video_file->getClientOriginalName();\n        $video_file->move(public_path('video'), $video_name);\n        $cont_image_path = public_path('video').$video_name;\n    }\n    \n    $cont_image = \"/img\".'/'.$img_name;\n    $cont_video = \"/video\".'/'.$video_name;\n    Session::put('cont_name',$cont_name);   \n    Session::put('cont_detail',$cont_detail);\n    Session::put('cont_category',$cont_category);\n    Session::put('cont_image',$cont_image);\n    Session::put('cont_video',$cont_video);\n    return redirect()->secure('/makingTool');\n  }\n  \n    public function convertType(Request $request)\n    {\n        $a = \"abcde\";\n        $b = substr($a,1,10);\n    dd($b);\n    }\n    \n    public function saveBlockData(Request $request){\n        $data = Content::where('cont_name','흥부놀부')->get();\n        \n        dd($data[0]->cont_name);\n    }\n    \n    public function loadBlockData(Request $request){\n        \n    }\n    public function loadBlocks(Request $request){\n        $name = $request->cont_name;\n        $usermario = Usermario::where('cont_name',$name)->get();\n        return ($usermario[0]->block_array);\n    }\n}\n  \n  \n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":4440,"scrollleft":0,"selection":{"start":{"row":330,"column":36},"end":{"row":330,"column":36},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":316,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1503534364592}